---
interface Props {
  mobTypes: string[];
  variants: string[];
  versions: string[];
}

const { mobTypes, variants, versions } = Astro.props;

const sortOptions = [
  { id: 'probability', label: 'Probability', value: 'probability' },
  { id: 'alphabet', label: 'Alphabet a-z', value: 'alphabet' },
  { id: 'date', label: 'Date', value: 'date' },
  { id: 'obtained', label: 'Obtained', value: 'obtained' },
  { id: 'not-obtained', label: 'Not obtained', value: 'not-obtained' },
  { id: 'used-farm', label: 'Used farm', value: 'used-farm' },
  { id: 'without-farm', label: 'Without farm', value: 'without-farm' },
];

const formatMobType = (type: string) => type
  .split('-')
  .map(w => w.charAt(0).toUpperCase() + w.slice(1))
  .join(' ');

const formatVariant = (variant: string) => variant
  .split('-')
  .map(w => w.charAt(0).toUpperCase() + w.slice(1))
  .join(' ');
---

<button
  id="sidebar-toggle"
  class="md:hidden fixed bottom-5 right-5 z-50 p-2 text-gray-400 hover:text-white w-14 h-14 bg-[#0A1428]  rounded-full flex items-center justify-center shadow-md transition-all duration-300 group hover:bg-[#11254d] hover:scale-110"
  aria-label="Toggle Filters"
>
  <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
  </svg>
</button>

<aside
  id="sidebar"
  class="fixed inset-y-0 left-0 z-40 w-60 overflow-y-auto border-r border-gray-800 p-5 transform -translate-x-full transition-transform duration-300 ease-in-out md:relative md:translate-x-0 md:block md:bg-transparent bg-[#0a1224]"
>
  <div class="mb-6">
    <h2 class="mb-3 text-xl font-semibold text-white">Sort by</h2>
    <div class="space-y-2">
      {sortOptions.map((option, index) => (
        <div class="flex items-center">
          <input
            type="radio"
            id={option.id}
            name="sort-by"
            value={option.value}
            checked={index === 0}
            class="h-4 w-4 border-gray-700 bg-gray-800 text-orange-500 focus:ring-orange-500"
          />
          <label for={option.id} class="ml-2 text-sm text-white">{option.label}</label>
        </div>
      ))}
    </div>
  </div>

  <div class="mb-6">
    <h2 class="mb-3 text-xl font-semibold text-white">Categories</h2>
    <div class="space-y-2">
      {mobTypes.map(type => (
        <div class="flex items-center">
          <input
            type="checkbox"
            id={type}
            data-filter-type="mobType"
            class="h-4 w-4 rounded border-gray-700 bg-gray-800 text-orange-500 focus:ring-orange-500"
          />
          <label for={type} class="ml-2 text-sm text-white">{formatMobType(type)}</label>
        </div>
      ))}
    </div>
  </div>

  <div class="mb-6">
    <h2 class="mb-3 text-xl font-semibold text-white">Variants</h2>
    <div class="space-y-2">
      {variants.map(variant => (
        <div class="flex items-center">
          <input
            type="checkbox"
            id={variant}
            data-filter-type="variant"
            class="h-4 w-4 rounded border-gray-700 bg-gray-800 text-orange-500 focus:ring-orange-500"
          />
          <label for={variant} class="ml-2 text-sm text-white">{formatVariant(variant)}</label>
        </div>
      ))}
    </div>
  </div>

  <div class="mb-6">
    <h2 class="mb-3 text-xl font-semibold text-white">Version</h2>
    <div class="space-y-2">
      {versions.map(version => (
        <div class="flex items-center">
          <input
            type="checkbox"
            id={version}
            data-filter-type="version"
            class="h-4 w-4 rounded border-gray-700 bg-gray-800 text-orange-500 focus:ring-orange-500"
          />
          <label for={version} class="ml-2 text-sm text-white">{version}</label>
        </div>
      ))}
    </div>
  </div>

</aside>

<script>
  const toggleBtn = document.getElementById('sidebar-toggle');
  const sidebar = document.getElementById('sidebar');
  toggleBtn?.addEventListener('click', () => {
    sidebar?.classList.toggle('-translate-x-full');
  });
</script>
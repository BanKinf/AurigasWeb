---
import { MinadoSalemData } from '../data/minadoSalemData.ts';
---

<body class="bg-gray-100 p-8">
    <div class="max-w-6xl mx-auto">
        <div class="flex">
            <h1 class="text-5xl font-bold mb-6">STREAMS DE MINAR - SALEM</h1>
            <img src="./logo.png" alt="Aurigas Logo" class="w-24" />
        </div>
        <style>
            h1 {
                font-family: "Concert One", serif;
                font-weight: 400;
                font-style: normal;
            }
        </style>

        <div id="modalOverlay" class="fixed inset-0 bg-black/85 flex items-center justify-center hidden">
            <div class="bg-white rounded-lg shadow-lg relative p-4 max-w-4xl w-full">
                <button id="closeModalBtn" class="absolute top-2 right-2 text-2xl text-gray-700">&times;</button>
                <canvas id="minadoChart" class="w-full h-96"></canvas>
            </div>
        </div>

        <div class="bg-white rounded-lg shadow-lg overflow-x-auto">
            <table id="minadoTable" class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Stream</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Duración</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Bloques</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Total Acumulado</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Enlace</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    {MinadoSalemData.map(([num, tiempo, bloques, total, link]) => (
                        <tr class="hover:bg-gray-50 transition-colors">
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">#{num}</td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                <i class="fas fa-stopwatch mr-2 text-purple-500"></i>
                                {tiempo}
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 font-semibold">
                                <i class="fas fa-cube mr-2 text-blue-500"></i>
                                {bloques}
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-emerald-600 font-bold">
                                <i class="fas fa-layer-group mr-2 text-green-500"></i>
                                {total}
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm">
                                <a 
                                    href={String(link)} 
                                    target="_blank" 
                                    class="text-indigo-600 hover:text-indigo-900 flex items-center"
                                    rel="noopener noreferrer"
                                >
                                    <i class="fab fa-twitch mr-2"></i>
                                    Ver sesión
                                    <i class="fas fa-external-link-alt ml-2 text-xs"></i>
                                </a>
                            </td>
                        </tr>
                    ))}
                </tbody>
            </table>
        </div>
        
        <button id="openModalBtn" class="px-6 py-2.5 mt-2 bg-white text-black rounded-lg hover:bg-gray-300 transition-transform">
            Mostrar Gráfica
        </button>
        
        <button id="exportCsvBtn" class="px-6 py-2.5 mt-2 bg-white text-black rounded-lg hover:bg-gray-300 transition-transform">
            Exportar CSV
        </button>
        
        <div id="minadoData" data-minado={JSON.stringify(MinadoSalemData)} class="hidden"></div>

        <div class="mt-10 p-6 bg-gradient-to-br from-purple-500/80 to-indigo-600/80 text-white rounded-2xl shadow-xl text-center">
            <h2 class="text-3xl font-extrabold mb-4 flex items-center justify-center gap-2">
                <i class="fas fa-code"></i> Script de Minado
            </h2>
            <p class="text-lg text-white/90 mb-6">
                Controla cuántos bloques has minado y cuánto te falta para terminar, al igual que Aurigas.  
                Descárgalo o revísalo aquí.  
            </p>
            <a href="/script-minado" class="inline-flex items-center gap-3 bg-white text-indigo-700 px-6 py-3 rounded-lg font-semibold text-lg shadow-md hover:bg-gray-200 hover:transition-transform hover:scale-105">
                <i class="fas fa-file-code text-2xl"></i> Ver Script
            </a>
        </div>
    </div>
    <script>
    document.addEventListener("DOMContentLoaded", () => {
        const chartScript = document.createElement("script");
        chartScript.src = "https://cdn.jsdelivr.net/npm/chart.js";
        chartScript.onload = () => { console.log("Chart.js cargado"); };
        document.body.appendChild(chartScript);

        const openModalBtn = document.getElementById('openModalBtn') as HTMLButtonElement;
        const closeModalBtn = document.getElementById('closeModalBtn') as HTMLButtonElement;
        const modalOverlay = document.getElementById('modalOverlay') as HTMLDivElement;
        const minadoDataElement = document.getElementById('minadoData') as HTMLDivElement;

        openModalBtn.addEventListener('click', () => {
            if (typeof Chart === "undefined") {
                console.error("Chart.js no está disponible aún.");
                return;
            }
            modalOverlay.classList.remove('hidden');
            document.body.style.overflow = 'hidden';
            crearGrafica();
        });

        closeModalBtn.addEventListener('click', () => {
            modalOverlay.classList.add('hidden');
            document.body.style.overflow = '';
        });

        function crearGrafica() {
            const minadoData = JSON.parse(minadoDataElement.dataset.minado!);
            function parseBlocks(str: string) {
                return parseInt(str.replace(/\./g, ''), 10);
            }

            const labels = minadoData.map((row: any) => `Stream ${row[0]}`);
            const bloquesPicados = minadoData.map((row: any) => parseBlocks(row[2]));
            const tiempos = minadoData.map((row: any) => row[1]);

            const ctx = (document.getElementById('minadoChart') as HTMLCanvasElement).getContext('2d');
            new Chart(ctx!, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Bloques Picados',
                        data: bloquesPicados,
                        backgroundColor: 'rgba(54, 162, 235, 0.7)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    plugins: {
                        title: { display: true, text: 'Bloques Picados por Stream' },
                        tooltip: {
                            callbacks: {
                                afterBody: (context: any) => {
                                    const index = context[0].dataIndex;
                                    return `Tiempo: ${tiempos[index]}`;
                                }
                            }
                        }
                    },
                    scales: {
                        y: { beginAtZero: true, title: { display: true, text: 'Bloques Picados' } },
                        x: { title: { display: true, text: 'Stream' } }
                    }
                }
            });
        }

        function exportTableToCSV(filename: string) {
            const csv: string[] = [];
            const table = document.getElementById("minadoTable") as HTMLTableElement;
            const rows = table.querySelectorAll("tr");

            rows.forEach(row => {
                const cols = row.querySelectorAll("th, td");
                const rowData: string[] = [];
                cols.forEach(col => {
                    let data = "";
                    const linkElem = col.querySelector("a");
                    if (linkElem) {
                        data = (linkElem as HTMLAnchorElement).href;
                    } else {
                        data = col.textContent?.trim() || "";
                    }
                    data = data.replace(/(\r\n|\n|\r)/gm, " ").replace(/"/g, '""');
                    if (data.indexOf(",") > -1) {
                        data = `"${data}"`;
                    }
                    rowData.push(data);
                });
                csv.push(rowData.join(","));
            });

            const csvFile = new Blob([csv.join("\n")], { type: "text/csv" });
            const tempLink = document.createElement("a");
            tempLink.download = filename;
            tempLink.href = window.URL.createObjectURL(csvFile);
            tempLink.style.display = "none";
            document.body.appendChild(tempLink);
            tempLink.click();
            document.body.removeChild(tempLink);
        }

        const exportCsvBtn = document.getElementById('exportCsvBtn') as HTMLButtonElement;
        exportCsvBtn.addEventListener('click', () => {
            exportTableToCSV("minado.csv");
        });
    });
    </script>
</body>